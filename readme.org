* ################ ファイル・フォルダの説明 ################
  Munoh/character  ...  人格ファイルを入れるフォルダ
  Munoh/config     ...  Munohの設定を入れるフォルダ
  Munoh/plugin     ...  Munohのプラグインを入れるフォルダ
  LICENCE.txt      ...  ライセンス
  munoh.rb         ...  Munohの本体
  readme.org       ...  このファイル(マニュアル)


* ################ 準備・起動方法 ################
  1. Ruby と MeCab をインストールてパスを通す
  2. MeCab にUTF-8の辞書をインストールする
  3. Munoh/config/system.conf の dicPath にインストールした辞書のパスを記述する
  4. コンソールを開いて ruby munoh.rb と入力する


* ################ 主な設定 ################
** system.conf
   dicPath      : MeCabの辞書のパス
   userName     : コンソール上に出てくる自分の名前
   munohName    : コンソール上に出てくるコンピュータの名前
   accept       : プラグインの起動時などにMunohがしゃべる言葉


* ################ 人格データについて ################
  Munoh/character/ に人格のデータが格納されています
  新しく  好きなファイル名.char  を作るとMunohの起動時に自動で読み込まれます。
  拡張子は char にしないと読み込まれません。


* ################ 設定ファイルについて ################
  Munoh/config/ に設定ファイルが格納されています
  新しく  好きなファイル名.conf  を作るとMunohの起動時に自動で読み込まれます。
  設定ファイルの書き方は  設定の名前 = 設定の内容  というふうに書きます。
  拡張子は conf にしないと見込まれません。

** 記述方法
   設定名 = 設定の内容
   というふうに記述して下さい。設定の内容は空白で区切って書くと複数
   記述することができます。また、正規表現を使うこともできます。


* ################ 開発者向け ################
  munoh.rb の deleteRegexpChar という関数にバグがあるので適当に直して下さい。
  プラグインは ggl や siritori を参考にして作って下さい。

** プラグインの名前
   Munoh/plugin の中にプラグインのフォルダ入れると自動で読み込まれます。
   作成したプラグインのフォルダの中にある
   プラグインのフォルダ名.rb と 拡張子がconf (ファイル名は任意)
   のファイルが自動で読み込まれます。

** プラグイン作成に使える関数
   outputText(配列)
   Munohに喋らせたい時に使う

   loadConfig(文字列1, 文字列2)
   文字列1に設定ファイル名、文字列2に設定ファイル内の設定名を渡すと
   設定の内容が配列で返ってきます。(文字列2は省略可。省略すると文字列1の
   ファイルの設定がすべて入った配列が返ってきます。)
   例えば  loadConfig("system.conf", "userName")  とすると、
   戻り値は ["あなた"] です。



細かいマニュアルを作るのがだるくなってきたので、何か質問があれば
所属と名前位入れてメールして下さい。できるだけ答えるようにします。
プラグインとか作ったら送ってもらえると、開発者が喜びます。
メールアドレス: nyukke415@gmail.com
